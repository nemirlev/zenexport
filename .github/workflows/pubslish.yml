name: Publish Release

on:
  push:
    branches:
      - 'master'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF#refs/heads/master/})

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log into Docker Hub
      uses: docker/login-action@v1
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: |
        VERSION=$(echo ${GITHUB_REF#refs/heads/master/})
        docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7,linux/riscv64 -t my-docker-image:$VERSION -t my-docker-image:latest . --push

    - name: Get the release id
      id: get_release_id
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}

    - name: Update the release
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const release_id = ${{ steps.get_release_id.outputs.id }};
          const response = await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release_id,
            draft: false
          });
          return response.data;